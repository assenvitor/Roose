{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/downloader/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,OAAO,EAAE,iBAAiB,EAAE,MAAM,EAAE,MAAM,oBAAoB,CAAC;AAExE,MAAM,CAAN,IAAY,sBAKX;AALD,WAAY,sBAAsB;IAChC,yEAAW,CAAA;IACX,uGAA0B,CAAA;IAC1B,2FAAoB,CAAA;IACpB,iHAA+B,CAAA;GAJrB,sBAAsB,KAAtB,sBAAsB,QAKjC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA0G+B,8BAAiB;;;;IAC/C;;;OAGG;;;;;IAEH,6BAAQ;;;;cAAC,OAAwB;QACjC,MAAM,CAAC;KACN;;gBATF,UAAU;;;QAMR,OAAO,EAAE;;;;8CAGT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IARU,UAAU;QARtB,MAAM,CAAC;YACN,UAAU,EAAE,YAAY;YACxB,MAAM,EAAE,sCAAsC;YAC9C,SAAS,EAAE,4BAA4B;YACvC,IAAI,EAAE,qEAAqE;YAC3E,SAAS,EAAE,CAAC,SAAS,CAAC;SACvB,CAAC;OAEW,UAAU,EAStB;qBA3HD;EAkHgC,iBAAiB;SAApC,UAAU","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\n\nexport enum NotificationVisibility {\n  Visible = 0,\n  VisibleNotifyCompleted = 1,\n  VisibilityHidden = 2,\n  VisibleNotifyOnlyCompletion = 3\n}\n\nexport interface DownloadHttpHeader {\n  header: string;\n  value: string;\n}\n\nexport interface DestinationDirectory {\n  dirType: string;\n  subPath: string;\n}\n\nexport interface DownloadRequest {\n  /**\n   * Location of the resource to download\n   */\n  uri: string;\n\n  /**\n   * Set the title of this download, to be displayed in notifications (if enabled).\n   * If no title is given, a default one will be assigned based on the download filename, once the download starts.\n   */\n  title?: string;\n  /**\n   * Set a description of this download, to be displayed in notifications (if enabled)\n   */\n  description?: string;\n  /**\n   * Set the MIME content type of this download. This will override the content type declared in the server's response.\n   */\n  mimeType?: string;\n  /**\n   * Set whether this download should be displayed in the system's Downloads UI. True by default.\n   */\n  visibleInDownloadsUi?: boolean;\n  /**\n   * Control whether a system notification is posted by the download manager while this download is running or when it is completed.\n   */\n  notificationVisibility?: NotificationVisibility;\n  /**\n   * Set the local destination for the downloaded file to a path within the application's external files directory\n   */\n  destinationInExternalFilesDir?: DestinationDirectory;\n  /**\n   * Set the local destination for the downloaded file to a path within the public external storage directory\n   */\n  destinationInExternalPublicDir?: DestinationDirectory;\n  /**\n   * Set the local destination for the downloaded file.\n   * Must be a file URI to a path on external storage, and the calling application must have the WRITE_EXTERNAL_STORAGE permission.\n   */\n  destinationUri?: string;\n  /**\n   * Add an HTTP header to be included with the download request. The header will be added to the end of the list.\n   */\n  headers?: DownloadHttpHeader[];\n}\n\n/**\n * @name Downloader\n * @description\n * This plugin is designed to support downloading files using Android DownloadManager.\n *\n *\n * @usage\n * ```typescript\n * import { Downloader } from '@ionic-native/downloader/ngx';\n *\n *\n * constructor(private downloader: Downloader) { }\n *\n * ...\n *\n *    var request: DownloadRequest = {\n *           uri: YOUR_URI,\n *           title: 'MyDownload',\n *           description: '',\n *           mimeType: '',\n *           visibleInDownloadsUi: true,\n *           notificationVisibility: NotificationVisibility.VisibleNotifyCompleted,\n *           destinationInExternalFilesDir: {\n *               dirType: 'Downloads',\n *               subPath: 'MyFile.apk'\n *           }\n *       };\n *\n *\n *   this.downloader.download(request)\n *   \t\t\t.then((location: string) => console.log('File downloaded at:'+location))\n *   \t\t\t.catch((error: any) => console.error(error));\n *\n * ```\n * @interfaces\n * NotificationVisibility\n * Header\n * DestinationDirectory\n * DownloadHttpHeader\n */\n@Plugin({\n  pluginName: 'Downloader',\n  plugin: 'integrator-cordova-plugin-downloader',\n  pluginRef: 'cordova.plugins.Downloader',\n  repo: 'https://github.com/Luka313/integrator-cordova-plugin-downloader.git',\n  platforms: ['Android']\n})\n@Injectable()\nexport class Downloader extends IonicNativePlugin {\n  /**\n   *  Starts a new download and returns location of the downloaded file on completion\n   *  @param request {DownloadRequest}\n   */\n  @Cordova()\n  download(request: DownloadRequest): Promise<string> {\n  return;\n  }\n}\n"]}